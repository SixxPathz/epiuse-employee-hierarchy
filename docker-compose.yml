version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: epiuse-postgres
    environment:
      POSTGRES_DB: epiuse_employee_db
      POSTGRES_USER: epiuse_user
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-SecurePassword123!}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/backend/prisma/migrations:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    networks:
      - epiuse-network
    restart: unless-stopped

  # Backend API
  backend:
    build: .
    container_name: epiuse-backend
    environment:
      DATABASE_URL: postgresql://epiuse_user:${POSTGRES_PASSWORD:-SecurePassword123!}@postgres:5432/epiuse_employee_db
      JWT_SECRET: ${JWT_SECRET}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: production
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
    networks:
      - epiuse-network
    restart: unless-stopped
    volumes:
      - ./apps/backend/uploads:/app/apps/backend/uploads

  # Frontend Application
  frontend:
    build: .
    container_name: epiuse-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://backend:5000
      NEXTAUTH_URL: ${NEXTAUTH_URL:-http://localhost:3000}
      NEXTAUTH_SECRET: ${NEXTAUTH_SECRET}
      NODE_ENV: production
      PORT: 3000
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - epiuse-network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: epiuse-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend
      - backend
    networks:
      - epiuse-network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  epiuse-network:
    driver: bridge